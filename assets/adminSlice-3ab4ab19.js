import{bj as o,bk as l,bl as f}from"./index-d1e9d783.js";const S={dashboardStats:null,salesStats:null,visitorStats:null,productStats:null,recentProducts:[],recentOrders:[],loading:!1,error:null},n=o("admin/getDashboardStats",async(r,{rejectWithValue:a})=>{var e,t;try{return(await l.get("/api/admin/dashboard")).data}catch(s){return a(((t=(e=s.response)==null?void 0:e.data)==null?void 0:t.message)||"Failed to fetch dashboard stats")}}),i=o("admin/getSalesStats",async(r="30days",{rejectWithValue:a})=>{var e,t;try{const s=await l.get(`/api/admin/stats/sales?period=${r}`);return s.data&&s.data.salesStats?s.data.salesStats:s.data&&s.data.success!==!1?s.data:a("Invalid response structure from server")}catch(s){const d=((t=(e=s.response)==null?void 0:e.data)==null?void 0:t.message)||s.message||"Failed to fetch sales statistics";return a(d)}}),c=o("admin/getVisitorStats",async(r="30days",{rejectWithValue:a})=>{var e,t;try{const s=await l.get(`/api/admin/stats/visitors?period=${r}`);return s.data&&s.data.visitorStats?s.data.visitorStats:s.data&&s.data.success!==!1?s.data:a("Invalid response structure from server")}catch(s){const d=((t=(e=s.response)==null?void 0:e.data)==null?void 0:t.message)||s.message||"Failed to fetch visitor statistics";return a(d)}}),u=o("admin/getProductStats",async(r,{rejectWithValue:a})=>{var e,t;try{const s=await l.get("/api/admin/stats/products");return s.data&&s.data.productStats?s.data.productStats:s.data&&s.data.success!==!1?s.data:a("Invalid response structure from server")}catch(s){const d=((t=(e=s.response)==null?void 0:e.data)==null?void 0:t.message)||s.message||"Failed to fetch product statistics";return a(d)}}),p=f({name:"admin",initialState:S,reducers:{clearAdminErrors:r=>{r.error=null},updateDashboardAfterOrderChange:(r,a)=>{r.dashboardStats&&(a.payload.isNewOrder&&(r.dashboardStats.totalOrders+=1),a.payload.isPaid&&a.payload.totalPrice&&(r.dashboardStats.totalRevenue=(r.dashboardStats.totalRevenue||0)+a.payload.totalPrice))},updateDashboardAfterProductChange:(r,a)=>{r.dashboardStats&&(a.payload.isNewProduct?r.dashboardStats.totalProducts+=1:a.payload.isDeleted&&(r.dashboardStats.totalProducts-=1),a.payload.countInStock===0?(r.dashboardStats.outOfStockProducts+=1,r.dashboardStats.lowStockProducts-=1):a.payload.countInStock>0&&a.payload.countInStock<=5&&(r.dashboardStats.lowStockProducts+=1,r.dashboardStats.outOfStockProducts-=1))}},extraReducers:r=>{r.addCase(n.pending,a=>{a.loading=!0,a.error=null}).addCase(n.fulfilled,(a,e)=>{a.loading=!1,a.dashboardStats=e.payload.stats,a.recentProducts=e.payload.recentProducts,a.recentOrders=e.payload.recentOrders}).addCase(n.rejected,(a,e)=>{a.loading=!1,a.error=e.payload}).addCase(i.pending,a=>{a.loading=!0,a.error=null}).addCase(i.fulfilled,(a,e)=>{a.loading=!1,a.salesStats=e.payload}).addCase(i.rejected,(a,e)=>{a.loading=!1,a.error=e.payload}).addCase(c.pending,a=>{a.loading=!0,a.error=null}).addCase(c.fulfilled,(a,e)=>{a.loading=!1,a.visitorStats=e.payload}).addCase(c.rejected,(a,e)=>{a.loading=!1,a.error=e.payload}).addCase(u.pending,a=>{a.loading=!0,a.error=null}).addCase(u.fulfilled,(a,e)=>{a.loading=!1,a.productStats=e.payload}).addCase(u.rejected,(a,e)=>{a.loading=!1,a.error=e.payload})}}),{clearAdminErrors:h,updateDashboardAfterOrderChange:y,updateDashboardAfterProductChange:m}=p.actions,b=p.reducer;export{h as clearAdminErrors,b as default,n as getDashboardStats,u as getProductStats,i as getSalesStats,c as getVisitorStats,y as updateDashboardAfterOrderChange,m as updateDashboardAfterProductChange};
